{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\nimport StudyDeck from \"../Decks/StudyDeck\";\nimport ListDeck from \"../Decks/ListDeck\";\nimport ViewDeck from \"../Decks/ViewDeck\";\nimport EditCard from \"../Cards/EditCard\";\nimport AddCard from \"../Cards/AddCard\";\nimport EditDeck from \"../Decks/EditDeck\";\nimport DeckForm from \"../Decks/DeckForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    function deckAPI() {\n      listDecks().then(res => {\n        setDecks(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    deckAPI();\n  }, []);\n  console.log(decks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ListDeck, {\n            decks: decks,\n            setDecks: setDecks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: /*#__PURE__*/_jsxDEV(AddCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(DeckForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(StudyDeck, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(ViewDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n} // function Layout() {\n//   const [decks, setDecks] = useState([]);\n//   useEffect(() => {\n//     const abortController = new AbortController();\n//     listDecks(abortController.signal)\n//       .then(setDecks)\n//       .catch(console.log(\"error\"));\n//     return () => abortController.abort();\n//   });\n//   return (\n//     <>\n//       <Header />\n//       <Switch>\n//         <Route exact path=\"/\">\n//           <Deck decks={decks} setDecks={setDecks} />\n//         </Route>\n//         <Route path=\"/decks/:deckId/study\">\n//           <StudyDeck />\n//         </Route>\n//         <NotFound />\n//       </Switch>\n//     </>\n//   );\n// }\n\n\n_s(Layout, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Layout/index.js"],"names":["React","useEffect","useState","Header","NotFound","Route","Switch","listDecks","StudyDeck","ListDeck","ViewDeck","EditCard","AddCard","EditDeck","DeckForm","Layout","decks","setDecks","deckAPI","then","res","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\nimport StudyDeck from \"../Decks/StudyDeck\";\nimport ListDeck from \"../Decks/ListDeck\";\nimport ViewDeck from \"../Decks/ViewDeck\";\nimport EditCard from \"../Cards/EditCard\";\nimport AddCard from \"../Cards/AddCard\";\nimport EditDeck from \"../Decks/EditDeck\";\nimport DeckForm from \"../Decks/DeckForm\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    function deckAPI() {\n      listDecks()\n        .then((res) => {\n          setDecks(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    deckAPI();\n  }, []);\n  console.log(decks);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <ListDeck decks={decks} setDecks={setDecks} />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck />\n          </Route>\n          <Route path=\"/decks/new\">\n            <DeckForm />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <StudyDeck decks={decks} />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <ViewDeck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\n// function Layout() {\n//   const [decks, setDecks] = useState([]);\n//   useEffect(() => {\n//     const abortController = new AbortController();\n//     listDecks(abortController.signal)\n//       .then(setDecks)\n//       .catch(console.log(\"error\"));\n//     return () => abortController.abort();\n//   });\n\n//   return (\n//     <>\n//       <Header />\n//       <Switch>\n//         <Route exact path=\"/\">\n//           <Deck decks={decks} setDecks={setDecks} />\n//         </Route>\n//         <Route path=\"/decks/:deckId/study\">\n//           <StudyDeck />\n//         </Route>\n//         <NotFound />\n//       </Switch>\n//     </>\n//   );\n// }\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}