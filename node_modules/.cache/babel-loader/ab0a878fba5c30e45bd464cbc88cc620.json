{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Decks/DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { createDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const deck = {\n    name: name,\n    description: desc\n  };\n  const history = useHistory();\n\n  const handleNameChange = event => setName(event.target.value);\n\n  const handleDescChange = event => setDesc(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let result = createDeck(deck);\n    console.log(result);\n    setName(\"\");\n    setDesc(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        class: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Create Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        onChange: handleNameChange,\n        value: name,\n        placeholder: \"Deck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"breed\",\n      children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"desc\",\n        type: \"text\",\n        name: \"desc\",\n        onChange: handleDescChange,\n        value: desc,\n        placeholder: \"Brief description of the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => history.push(\"/\"),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckForm, \"jkFJn4MkPgJpwyL7CxIlDuoluTo=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Decks/DeckForm.js"],"names":["React","useState","useHistory","Link","createDeck","DeckForm","name","setName","desc","setDesc","deck","description","history","handleNameChange","event","target","value","handleDescChange","handleSubmit","preventDefault","result","console","log","push"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,IAAI,GAAG;AAAEJ,IAAAA,IAAI,EAAEA,IAAR;AAAcK,IAAAA,WAAW,EAAEH;AAA3B,GAAb;AACA,QAAMI,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,gBAAgB,GAAIC,KAAD,IAAWP,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3C;;AACA,QAAMC,gBAAgB,GAAIH,KAAD,IAAWL,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3C;;AAEA,QAAME,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIC,MAAM,GAAGhB,UAAU,CAACM,IAAD,CAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAb,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,KAAK,EAAC,wBAAV;AAAmC,0BAAa,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA,sCAEE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEL,gBAJZ;AAKE,QAAA,KAAK,EAAEP,IALT;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA,6CAEE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEW,gBAJZ;AAKE,QAAA,KAAK,EAAET,IALT;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eAmCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF,eAoCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMI,OAAO,CAACW,IAAR,CAAa,GAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GA3DuBlB,Q;UAINH,U;;;KAJMG,Q","sourcesContent":["import { React, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { createDeck } from \"../utils/api\";\n\nexport default function DeckForm() {\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const deck = { name: name, description: desc };\n  const history = useHistory();\n\n  const handleNameChange = (event) => setName(event.target.value);\n  const handleDescChange = (event) => setDesc(event.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let result = createDeck(deck);\n    console.log(result);\n    setName(\"\");\n    setDesc(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n      <h2>Create Deck</h2>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleNameChange}\n          value={name}\n          placeholder=\"Deck Name\"\n        />\n      </label>\n      <label htmlFor=\"breed\">\n        Description\n        <textarea\n          id=\"desc\"\n          type=\"text\"\n          name=\"desc\"\n          onChange={handleDescChange}\n          value={desc}\n          placeholder=\"Brief description of the deck\"\n        />\n      </label>\n\n      <button type=\"submit\">Submit</button>\n      <button type=\"button\" onClick={() => history.push(\"/\")}>\n        Cancel\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}