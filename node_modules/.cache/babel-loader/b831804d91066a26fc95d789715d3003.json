{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Decks/StudyDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport \"./StudyDeck.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudyDeck = () => {\n  _s();\n\n  // sets state with cards where deckId matches deck.id\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const [currentCardNumber, setCurrentCardNumber] = useState(1);\n  const [isCardFront, setIsCardFront] = useState(true);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    readDeck(deckId).then(setDeck); // eslint-disable-next-line\n  }, [deckId]);\n\n  const handleNext = () => {\n    setCurrentCardNumber(currentCardNumber => currentCardNumber + 1);\n    setIsCardFront(true);\n\n    if (currentCardNumber === deck.cards.length && !isCardFront) {\n      const goBackToHomePage = !window.confirm(\"Restart cards?\\n\\nClick 'cancel' to return to the home page\");\n\n      if (goBackToHomePage) {\n        history.push(\"/\");\n      } else {\n        setCurrentCardNumber(1);\n        setIsCardFront(true);\n      }\n    }\n  };\n\n  const card = deck.cards[currentCardNumber - 1];\n\n  if (!deck.id) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (deck.cards.length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          class: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bi bi-house-door-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), \" Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: \"Rendering In React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [deck.name, \": Study\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), card && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Card \", currentCardNumber, \" of \", deck.cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), isCardFront ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary flip-btn\",\n          onClick: () => setIsCardFront(!isCardFront),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), !isCardFront && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  /* if not enough cards, render this */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        class: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-house-door-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Not enough cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need at least 3 cards to study. There are \", deck.cards.length, \" cards in this deck.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deck.id}/cards/new`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-plus-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), \" Add Cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudyDeck, \"BZjpkmb2u7LUfBfuGxQ4tJgdxYA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = StudyDeck;\nexport default StudyDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyDeck\");","map":{"version":3,"sources":["/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Decks/StudyDeck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","readDeck","StudyDeck","deck","setDeck","cards","currentCardNumber","setCurrentCardNumber","isCardFront","setIsCardFront","deckId","history","then","handleNext","length","goBackToHomePage","window","confirm","push","card","id","name","front","back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport \"./StudyDeck.css\";\n\nconst StudyDeck = () => {\n  // sets state with cards where deckId matches deck.id\n  const [deck, setDeck] = useState({ cards: [] });\n  const [currentCardNumber, setCurrentCardNumber] = useState(1);\n  const [isCardFront, setIsCardFront] = useState(true);\n  const { deckId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n    // eslint-disable-next-line\n  }, [deckId]);\n\n  const handleNext = () => {\n    setCurrentCardNumber((currentCardNumber) => currentCardNumber + 1);\n    setIsCardFront(true);\n\n    if (currentCardNumber === deck.cards.length && !isCardFront) {\n      const goBackToHomePage = !window.confirm(\n        \"Restart cards?\\n\\nClick 'cancel' to return to the home page\"\n      );\n\n      if (goBackToHomePage) {\n        history.push(\"/\");\n      } else {\n        setCurrentCardNumber(1);\n        setIsCardFront(true);\n      }\n    }\n  };\n\n  const card = deck.cards[currentCardNumber - 1];\n\n  if (!deck.id) {\n    return <p>Loading...</p>;\n  }\n\n  if (deck.cards.length > 2) {\n    return (\n      <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <Link to=\"/\">\n                <i class=\"bi bi-house-door-fill\"></i> Home\n              </Link>\n            </li>\n            <li class=\"breadcrumb-item\">\n              <Link to={`/decks/${deckId}`}>Rendering In React</Link>\n            </li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\n              Study\n            </li>\n          </ol>\n        </nav>\n\n        <h1>{deck.name}: Study</h1>\n\n        {card && (\n          <div className=\"deck-container\">\n            <h5>\n              Card {currentCardNumber} of {deck.cards.length}\n            </h5>\n            {isCardFront ? <p>{card.front}</p> : <p>{card.back}</p>}\n            <button\n              className=\"btn btn-secondary flip-btn\"\n              onClick={() => setIsCardFront(!isCardFront)}\n            >\n              Flip\n            </button>\n            {!isCardFront && (\n              <button className=\"btn btn-primary\" onClick={handleNext}>\n                Next\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /* if not enough cards, render this */\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <i class=\"bi bi-house-door-fill\"></i> Home\n            </Link>\n          </li>\n          <li class=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Study\n          </li>\n        </ol>\n      </nav>\n      <h1>{deck.name}: Study</h1>\n      <h3>Not enough cards</h3>\n      <p>\n        You need at least 3 cards to study. There are {deck.cards.length} cards\n        in this deck.\n      </p>\n      <Link to={`/decks/${deck.id}/cards/new`}>\n        <button className=\"btn btn-primary\">\n          <i class=\"bi bi-plus-lg\"></i> Add Cards\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default StudyDeck;\n"]},"metadata":{},"sourceType":"module"}