{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Comps/Decks/DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\"; //builds out the form that is used to either edit or create decks.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckForm = _ref => {\n  _s();\n\n  let {\n    handleSubmit,\n    deck,\n    setDeck\n  } = _ref;\n  const initNewDeck = {\n    name: \"\",\n    description: \"\"\n  };\n  const [newDeck, setNewDeck] = useState({ ...initNewDeck\n  });\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (!deck) {\n      handleSubmit(newDeck);\n    } else {\n      handleSubmit(deck);\n    }\n\n    setNewDeck({ ...initNewDeck\n    });\n  };\n\n  const handleChange = event => {\n    if (!deck) {\n      setNewDeck({ ...newDeck,\n        [event.target.id]: event.target.value\n      });\n    } else {\n      setDeck({ ...deck,\n        [event.target.id]: event.target.value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!deck && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"name\",\n          placeholder: \"Deck Name\",\n          value: newDeck.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"description\",\n          placeholder: \"Brief description of the deck\",\n          value: newDeck.description,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-deck-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), deck && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"name\",\n          placeholder: \"Deck Name\",\n          value: deck.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"description\",\n          placeholder: \"Brief description of the deck\",\n          value: deck.description,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-deck-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeckForm, \"ya4m41Zf+VKYGYCwvOG//N5k5DU=\");\n\n_c = DeckForm;\nexport default DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Comps/Decks/DeckForm.js"],"names":["React","useState","Link","DeckForm","handleSubmit","deck","setDeck","initNewDeck","name","description","newDeck","setNewDeck","onSubmit","event","preventDefault","handleChange","target","id","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//builds out the form that is used to either edit or create decks.\n\nconst DeckForm = ({ handleSubmit, deck, setDeck }) => {\n  const initNewDeck = {\n    name: \"\",\n    description: \"\",\n  };\n  const [newDeck, setNewDeck] = useState({ ...initNewDeck });\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (!deck) {\n      handleSubmit(newDeck);\n    } else {\n      handleSubmit(deck);\n    }\n\n    setNewDeck({ ...initNewDeck });\n  };\n\n  const handleChange = (event) => {\n    if (!deck) {\n      setNewDeck({ ...newDeck, [event.target.id]: event.target.value });\n    } else {\n      setDeck({ ...deck, [event.target.id]: event.target.value });\n    }\n  };\n\n  return (\n    <div>\n      {!deck && (\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"name\"\n              placeholder=\"Deck Name\"\n              value={newDeck.name}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              class=\"form-control\"\n              id=\"description\"\n              placeholder=\"Brief description of the deck\"\n              value={newDeck.description}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"create-deck-btns\">\n            <Link to=\"/\">\n              <button className=\"btn btn-secondary\">Cancel</button>\n            </Link>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n\n      {deck && (\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"name\"\n              placeholder=\"Deck Name\"\n              value={deck.name}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              class=\"form-control\"\n              id=\"description\"\n              placeholder=\"Brief description of the deck\"\n              value={deck.description}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"create-deck-btns\">\n            <Link to=\"/\">\n              <button className=\"btn btn-secondary\">Cancel</button>\n            </Link>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default DeckForm;\n"]},"metadata":{},"sourceType":"module"}