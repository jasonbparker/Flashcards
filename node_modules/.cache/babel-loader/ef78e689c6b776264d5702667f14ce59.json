{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Comps/Cards/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CardForm from \"./CardForm\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCard = () => {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const [card, setCard] = useState({});\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n    readCard(cardId).then(setCard); // eslint-disable-next-line\n  }, [deckId, cardId]);\n\n  const handleSubmit = async card => {\n    // needs to await for a successful update\n    await updateCard(card); // then push to deck after update\n\n    history.push(`/decks/${deckId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        class: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-house-door-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: [\"Edit Card \", card.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), card.id && /*#__PURE__*/_jsxDEV(CardForm, {\n      card: card,\n      setCard: setCard,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCard, \"coEM4OKLYA2AIdT4iJrvzmCPkjc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Comps/Cards/EditCard.js"],"names":["React","useState","useEffect","CardForm","useParams","Link","useHistory","readCard","readDeck","updateCard","EditCard","deck","setDeck","cards","card","setCard","deckId","cardId","history","then","handleSubmit","push","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,iBAA/C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEe,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBb,SAAS,EAApC;AACA,QAAMc,OAAO,GAAGZ,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACQ,MAAD,CAAR,CAAiBG,IAAjB,CAAsBP,OAAtB;AACAL,IAAAA,QAAQ,CAACU,MAAD,CAAR,CAAiBE,IAAjB,CAAsBJ,OAAtB,EAFc,CAGd;AACD,GAJQ,EAIN,CAACC,MAAD,EAASC,MAAT,CAJM,CAAT;;AAMA,QAAMG,YAAY,GAAG,MAAON,IAAP,IAAgB;AACnC;AACA,UAAML,UAAU,CAACK,IAAD,CAAhB,CAFmC,CAGnC;;AACAI,IAAAA,OAAO,CAACG,IAAR,CAAc,UAASL,MAAO,EAA9B;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,iBAAV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,oCACE;AAAG,cAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAI,UAAA,KAAK,EAAC,iBAAV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASL,IAAI,CAACW,EAAG,EAA5B;AAAA,sBAAgCX,IAAI,CAACY;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAI,UAAA,KAAK,EAAC,wBAAV;AAAmC,0BAAa,MAAhD;AAAA,mCACaT,IAAI,CAACQ,EADlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,EAmBGR,IAAI,CAACQ,EAAL,iBACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAER,IAAhB;AAAsB,MAAA,OAAO,EAAEC,OAA/B;AAAwC,MAAA,YAAY,EAAEK;AAAtD;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5CD;;GAAMV,Q;UAGuBN,S,EACXE,U;;;KAJZI,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CardForm from \"./CardForm\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../../utils/api\";\n\nconst EditCard = () => {\n  const [deck, setDeck] = useState({ cards: [] });\n  const [card, setCard] = useState({});\n  const { deckId, cardId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n    readCard(cardId).then(setCard);\n    // eslint-disable-next-line\n  }, [deckId, cardId]);\n\n  const handleSubmit = async (card) => {\n    // needs to await for a successful update\n    await updateCard(card);\n    // then push to deck after update\n    history.push(`/decks/${deckId}`);\n  };\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <i class=\"bi bi-house-door-fill\"></i> Home\n            </Link>\n          </li>\n          <li class=\"breadcrumb-item\">\n            <Link to={`/decks/${deck.id}`}>{deck.name}</Link>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Card {card.id}\n          </li>\n        </ol>\n      </nav>\n\n      <h2>Edit Card</h2>\n\n      {card.id && (\n        <CardForm card={card} setCard={setCard} handleSubmit={handleSubmit} />\n      )}\n    </div>\n  );\n};\n\nexport default EditCard;\n"]},"metadata":{},"sourceType":"module"}