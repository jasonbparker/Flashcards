{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Layout/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckList(_ref) {\n  _s();\n\n  let {\n    decks = [],\n    setDecks\n  } = _ref;\n  const history = useHistory();\n\n  function handleDelete(id) {\n    let result = window.confirm(\"Delete this deck? \\n \\n You will not be able to recover it.\");\n\n    if (result) {\n      const updatedDecks = decks.filter(deck => deck.id !== id);\n      deleteDeck(id);\n      setDecks(updatedDecks);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/decks/new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"oi oi-plus\",\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), decks.map(deck => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: [deck.cards.length, \" cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/study`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-primary\",\n              children: \" Study \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-secondary\",\n              children: \" View \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-danger\",\n            onClick: e => {\n              e.preventDefault();\n              handleDelete(deck.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckList, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/Users/jasonbrianparker/Downloads/Project-_Flashcards-_Qualified-Jason_Parker-Solution/src/Layout/Deck.js"],"names":["React","useState","useEffect","Link","useHistory","deleteDeck","DeckList","decks","setDecks","history","handleDelete","id","result","window","confirm","updatedDecks","filter","deck","map","name","cards","length","description","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,SAASC,QAAT,OAA4C;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,KAAK,GAAG,EAAV;AAAcC,IAAAA;AAAd,GAA0B;AAC1C,QAAMC,OAAO,GAAGL,UAAU,EAA1B;;AAEA,WAASM,YAAT,CAAsBC,EAAtB,EAA0B;AACxB,QAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,CACX,6DADW,CAAb;;AAIA,QAAIF,MAAJ,EAAY;AACV,YAAMG,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAArB;AACAN,MAAAA,UAAU,CAACM,EAAD,CAAV;AACAH,MAAAA,QAAQ,CAACO,YAAD,CAAR;AACD;AACF;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAQGR,KAAK,CAACW,GAAN,CAAWD,IAAD,IAAU;AACnB,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA4BA,IAAI,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,+BAAd;AAAA,uBACGF,IAAI,CAACG,KAAL,CAAWC,MADd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BJ,IAAI,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALF,eAOE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASL,IAAI,CAACN,EAAG,QAA5B;AAAA,mCACE;AAAQ,cAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAWE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASM,IAAI,CAACN,EAAG,EAA5B;AAAA,mCACE;AAAQ,cAAA,KAAK,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF,eAeE;AACE,YAAA,KAAK,EAAC,gBADR;AAEE,YAAA,OAAO,EAAGY,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACC,cAAF;AACAd,cAAAA,YAAY,CAACO,IAAI,CAACN,EAAN,CAAZ;AACD,aALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA6BD,KA9BA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GAxDQL,Q;UACSF,U;;;KADTE,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api\";\n\nfunction DeckList({ decks = [], setDecks }) {\n  const history = useHistory();\n\n  function handleDelete(id) {\n    let result = window.confirm(\n      \"Delete this deck? \\n \\n You will not be able to recover it.\"\n    );\n\n    if (result) {\n      const updatedDecks = decks.filter((deck) => deck.id !== id);\n      deleteDeck(id);\n      setDecks(updatedDecks);\n    }\n  }\n  return (\n    <div>\n      <div className=\"actions\">\n        <Link to=\"/decks/new\">\n          <button className=\"btn btn-secondary\">\n            <span className=\"oi oi-plus\">Create Deck</span>\n          </button>\n        </Link>\n      </div>\n      {decks.map((deck) => {\n        return (\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{deck.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">\n                {deck.cards.length} cards\n              </h6>\n              <p className=\"card-text\">{deck.description}</p>\n\n              <Link to={`/decks/${deck.id}/study`}>\n                <button class=\"btn btn-primary\"> Study </button>\n              </Link>\n\n              <Link to={`/decks/${deck.id}`}>\n                <button class=\"btn btn-secondary\"> View </button>\n              </Link>\n\n              <button\n                class=\"btn btn-danger\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleDelete(deck.id);\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default DeckList;\n"]},"metadata":{},"sourceType":"module"}